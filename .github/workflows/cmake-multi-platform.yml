# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Windows Build
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.2
      with:
        version: 1.4.313.0
        cache: true
    
    - name: Cache Qt 6.9.0
      id: cache-qt
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/Qt
        key: qt-6.9.0-windows-msvc2022-x64
        
    - name: Install Qt 6.9.0
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.9.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        dir: '${{ github.workspace }}/Qt'
        install-deps: 'true'
        modules: 'qtwebengine qtwebchannel qtpositioning'
        cache: 'true'
    
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}
        
    - name: Build
      run: cmake --build cmake-build --parallel --config ${{ matrix.build_type }}
      
    - name: Test
      working-directory: cmake-build
      run: ctest --build-config ${{ matrix.build_type }}
