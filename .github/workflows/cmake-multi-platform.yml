# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Windows Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v4
      with:
        path: C:\VulkanSDK
        key: vulkan-sdk-1.4.313.0-windows

    - name: Install Vulkan SDK
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/download/1.4.313.0/windows/VulkanSDK-1.4.313.0-Installer.exe" -OutFile VulkanSDK-Installer.exe
        .\VulkanSDK-Installer.exe --accept-licenses --default-answer --confirm-command install
        Start-Sleep -Seconds 10

    - name: Set Vulkan Environment Variables
      run: |
        echo "VULKAN_SDK=C:\VulkanSDK\1.4.313.0" >> $env:GITHUB_ENV
        echo "C:\VulkanSDK\1.4.313.0\Bin" >> $env:GITHUB_PATH

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        # ninja version to download. Default: 1.10.0
        version: 1.11.1

    # Use the newer setup-msbuild action that properly initializes the MSVC environment
    - name: Setup MSVC
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: >
        cmake -B cmake-build
        -G Ninja
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build cmake-build --parallel

    - name: Test
      working-directory: cmake-build
      run: ctest --output-on-failure --parallel

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          cmake-build/**/*.exe
          cmake-build/**/*.dll
          cmake-build/**/*.lib
        retention-days: 7
